{"version":3,"sources":["reducers/selectSquareReducer.js","reducers/highlightSquareReducer.js","reducers/chessReducer.js","reducers/chatReducer.js","reducers/lobbyReducer.js","reducers/userReducer.js","services/socket.js","components/NavBarLogin.js","components/NavBar.js","components/HistoryTable.js","components/ChatBox.js","components/ChessStatusDisplay.js","components/ChessGame.js","components/Lobby.js","components/HomePage.js","services/sign.js","components/SigninForm.js","components/SignupForm.js","App.js","index.js"],"names":["selectSquareReducer","state","action","type","square","setHighlightSquares","squaresToHighlight","highlightSquares","initialChessStatus","fen","currentPlayer","winner","history","undefined","potentialMoves","isChecked","isGameOver","chessReducer","updateChess","chessStatus","chatReducer","chat","message","gameLog","setRoomJoined","joinedRoom","lobbyReducer","lobby","rooms","roomJoined","newRoomInfo","side","availableRooms","setUser","user","userReducer","userName","socket","socketio","connect","SocketContext","React","createContext","NavBarLogin","useHistory","classes","makeStyles","theme","loginButton","marginLeft","margin","spacing","useStyles","console","log","IconButton","className","color","onClick","push","Typography","variant","NavBar","useSelector","root","flexGrow","display","justifyContent","marginBottom","navItem","marginRight","link","palette","background","paper","textDecoration","AppBar","position","Toolbar","to","edge","HistoryTable","table","minWidth","height","overflowY","border","borderRadius","StyledTableCell","withStyles","head","backgroundColor","primary","main","common","white","body","fontSize","TableCell","StyledTableRow","divider","TableRow","createRow","turn","whiteMove","blackMove","t","w","b","rows","length","row","splice","splitHistoryToRows","TableContainer","Table","size","TableHead","TableBody","map","ChatBox","useContext","dispatch","useDispatch","roomId","messageArea","overflow","messageBox","marginTop","messageBoxText","width","messageBoxSend","useEffect","emit","on","updateChatLog","List","dense","logItem","ListItem","ListItemText","onSubmit","event","preventDefault","TextField","placeholder","value","onChange","setChatMessage","target","Button","endIcon","ChessStatusDisplay","ChessGame","selectedSquare","highlightedSquares","chess","grid","textAlign","status","updateChessStatus","Grid","container","justify","item","draggable","onSquareClick","squarePotentialMoves","filter","move","from","setSelectSquare","validMoves","reduce","acc","cur","flags","backgroundRadius","highlightPotentialMoves","validMove","find","highlightMove","squareStyles","xl","Lobby","colorStyle","newRoomId","roomName","direction","alignItems","FormControl","InputLabel","htmlFor","Select","native","label","formButton","room","button","roomOwner","secondary","HomePage","name","nanoid","customAlphabet","baseUrl","signUp","credentials","a","axios","post","signIn","get","params","SigninForm","flexDirection","avatar","form","submit","error","formik","useFormik","initialValues","password","validate","values","errors","actions","response","data","setFieldError","setSubmitting","Container","component","maxWidth","CssBaseline","Avatar","general","handleSubmit","required","fullWidth","id","autoComplete","autoFocus","handleChange","username","SignupForm","newUser","xs","App","disconnect","path","combinedReducer","combineReducers","highlightSquareReducer","store","createStore","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c82ce19b.chunk.js","sourcesContent":["const selectSquareReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SELECT':\n            return action.square\n        case 'SELECT_RESET':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const setSelectSquare = square => {\n    return {\n        type: 'SELECT',\n        square: square\n    }\n}\n\nexport const resetSelectedSquare = () => {\n    return {\n        type: 'SELECT_RESET'\n    }\n}\n\nexport default selectSquareReducer\n","const selectSquareReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'HIGHLIGHT':\n            return action.highlightSquares\n        case 'RESET_HIGHLIGHT':\n                return {}\n        default:\n            return state\n    }\n}\n\nexport const setHighlightSquares = squaresToHighlight => {\n    return {\n        type: 'HIGHLIGHT',\n        highlightSquares: squaresToHighlight\n    }\n}\n\nexport const resetHighlightSquares = () => {\n    return {\n        type: 'RESET_HIGHLIGHT'\n    }\n}\n\nexport default selectSquareReducer\n","const initialChessStatus = {\n    fen: 'start',\n    currentPlayer: '',\n    winner: '',\n    history: undefined,\n    potentialMoves: {},\n    isChecked: false,\n    isGameOver: false\n}\n\nconst chessReducer = (updateChess = initialChessStatus, action) => {\n    switch (action.type) {\n        case 'UPDATE_CHESS_STATUS':\n            return action.chessStatus\n        default:\n            return updateChess\n    }\n}\n\nexport const updateChessStatus = chessStatus => {\n    return {\n        type: 'UPDATE_CHESS_STATUS',\n        chessStatus: chessStatus\n    }\n}\n\nexport default chessReducer\n","const chatReducer = (chat = {message: '', gameLog: []}, action) => {\n    switch (action.type) {\n        case 'SET_CHAT_MESSAGE':\n            return {\n                ...chat,\n                message: action.message\n            }\n        case 'RESET_CHAT_MESSAGE':\n            return {\n                ...chat,\n                message: ''\n            }\n        case 'UPDATE_CHAT_LOG':\n            return {\n                ...chat,\n                gameLog: action.gameLog\n            }\n        default:\n            return chat\n    }\n}\n\nexport const setChatMessage = message => {\n    return {\n        type: 'SET_CHAT_MESSAGE',\n        message: message\n    }\n}\n\nexport const resetChatMessage = () => {\n    return {\n        type: 'RESET_CHAT_MESSAGE'\n    }\n}\n\nexport const updateChatLog = gameLog => {\n    return {\n        type: 'UPDATE_CHAT_LOG',\n        gameLog: gameLog\n    }\n}\n\nexport default chatReducer\n","const lobbyReducer = (lobby = {rooms: [], roomJoined: null, newRoomInfo: {side: 'white'}}, action) => {\n    switch (action.type) {\n        case 'SET_NEW_ROOM_PLAYER_SIDE':\n            return {\n                ...lobby,\n                newRoomInfo: {\n                    ...lobby.newRoomInfo,\n                    side: action.side\n                }\n            }\n        case 'SET_ROOM_JOINED':\n            return {\n                ...lobby,\n                joinedRoom: action.joinedRoom\n            }\n        case 'RESET_ROOM_JOINED' :\n            return {\n                ...lobby,\n                joinedRoom: null\n            }\n        case 'SET_AVAILABLE_ROOMS':\n            return {\n                ...lobby,\n                rooms: action.availableRooms\n            }\n        default:\n            return lobby\n    }\n}\n\nexport const setNewRoomPlayerSide = side => {\n    return {\n        type: 'SET_NEW_ROOM_PLAYER_SIDE',\n        side: side\n    }\n}\n\nexport const setRoomJoined = joinedRoom => {\n    return {\n        type: 'SET_ROOM_JOINED',\n        joinedRoom: joinedRoom\n    }\n}\n\nexport const resetRoomJoined = () => {\n    return {\n        type: 'RESET_ROOM_JOINED',\n    }\n}\n\nexport const setAvailableRooms = availableRooms => {\n    return {\n        type: 'SET_AVAILABLE_ROOMS',\n        availableRooms: availableRooms\n    }\n}\n\nexport default lobbyReducer\n","const userReducer = (user = {userName: undefined}, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.user\n        default:\n            return user\n    }\n}\n\nexport const setUser = user => {\n    return {\n        type: 'SET_USER',\n        user: user\n    }\n}\n\nexport default userReducer\n","import React from 'react'\nimport socketio from \"socket.io-client\"\n\nexport const socket = socketio.connect('https://rocky-inlet-25088.herokuapp.com/')\nexport const SocketContext = React.createContext()","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport Typography from '@material-ui/core/Typography'\nimport {useHistory} from \"react-router-dom\"\n\nconst NavBarLogin = ({user}) => {\n  const history = useHistory()  \n  const useStyles = makeStyles((theme) => ({\n    loginButton: {\n        marginLeft: 'auto',\n        margin: theme.spacing(2)\n    }\n  }))\n  \n  const handleLoginButton = () => {\n    history.push('/signin')\n  }\n\n  const classes = useStyles();\n  console.log(user.userName)\n  if (user.userName === undefined) {\n    return (\n      <IconButton\n        className={classes.loginButton}\n        color=\"inherit\"\n        onClick={handleLoginButton}\n      >\n        <Typography variant=\"h6\">\n          Login\n        </Typography>\n      </IconButton>\n    )\n  } else {\n    return (\n      <IconButton\n        className={classes.loginButton}\n        color=\"inherit\"\n      >\n        <Typography variant=\"h6\">\n            {user.userName}\n        </Typography>\n        <AccountCircle />\n      </IconButton>\n    )\n  }\n}\n\nexport default NavBarLogin","import React from 'react';\nimport {makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavBarLogin from './NavBarLogin'\nimport Typography from '@material-ui/core/Typography'\nimport {Link} from \"react-router-dom\"\nimport {useSelector} from 'react-redux'\n\nconst NavBar = () => {\n    const user = useSelector(state => state.user)\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n          display: 'flex',\n          justifyContent:'flex-end',\n          marginBottom: '10px'\n        },\n        navItem: {\n          marginRight: theme.spacing(4),\n        },\n        link: {\n            color: theme.palette.background.paper,\n            textDecoration: 'none',\n            ':hover': {\n                color: '#00F'\n            }\n        }\n      }))\n      \n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n                <Typography className={classes.navItem} variant=\"h4\">\n                  Chess JS\n                </Typography>\n                <Link className={classes.link} to=\"/lobby\">\n                    <IconButton edge=\"start\" className={classes.navItem} color=\"inherit\">\n                        <Typography variant=\"h6\">\n                          Lobby\n                        </Typography>\n                    </IconButton>\n                </Link>\n              <NavBarLogin user={user} />\n            </Toolbar>\n          </AppBar>\n        </div>\n      )\n}\nexport default NavBar","\nimport React from 'react'\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst HistoryTable = ({history}) => {\n    const useStyles = makeStyles({\n        table: {\n            minWidth: '540px',\n            height: '300px',\n            overflowY: 'auto',\n            border: \"1px solid black\",\n            borderRadius: \"5px\",\n            marginBottom: \"5px\"\n        }\n    })\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white\n        },\n        body: {\n            fontSize: 18\n        }\n    }))(TableCell)\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.divider,\n          },\n        },\n    }))(TableRow);\n    \n    const createRow = (turn, whiteMove, blackMove) => {\n      return {t: turn, w: whiteMove, b: blackMove}\n    }\n    \n    const splitHistoryToRows = (history) => {\n      let rows = []\n      if (history === undefined) {\n        return rows\n      }\n      let turn = 1\n      while (history.length) {\n        const row = history.splice(0, 2)\n        rows.push(createRow(turn, row[0], row[1]))\n        turn++\n      }\n      return rows\n    }\n\n    const rows = splitHistoryToRows(history)\n    const classes = useStyles()\n\n    return (\n      <TableContainer className={classes.table}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n                <StyledTableCell>Turn</StyledTableCell>\n                <StyledTableCell>White</StyledTableCell>\n                <StyledTableCell>Black</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return(\n              <StyledTableRow key={row.t}>\n                <StyledTableCell>{row.t}</StyledTableCell>\n                <StyledTableCell>{row.w}</StyledTableCell>\n                <StyledTableCell>{row.b}</StyledTableCell>\n              </StyledTableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n  }\n\nexport default HistoryTable","\nimport React, {useContext, useEffect} from 'react'\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Button from '@material-ui/core/Button'\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {setChatMessage, resetChatMessage, updateChatLog} from '../reducers/chatReducer'\nimport { SocketContext } from '../services/socket'\n\nconst ChatBox = () => {\n    const socket = useContext(SocketContext)\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.user)\n    const roomId = useSelector(state => state.lobby.joinedRoom)\n    const message = useSelector(state => state.chat.message)\n    const gameLog = useSelector(state => state.chat.gameLog)\n\n    const useStyles = makeStyles(() => ({\n        root: {\n            height: '400px',\n        },\n        messageArea: {\n            height: '300px',\n            overflow: 'auto',\n            border: \"2px solid black\",\n            borderRadius: \"5px\"\n        },\n        messageBox: {\n            height:'60px',\n            marginTop: \"5px\",\n        },\n        messageBoxText: {\n            height: '100%',\n            width: '78%',\n            borderRadius: \"5px\",\n            marginRight: \"3px\"\n        },\n        messageBoxSend: {\n            width: 'auto',\n            height: '100%'\n        }\n    }))\n\n    const handleTextChange = (event) => {\n        dispatch(setChatMessage(event.target.value))\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        socket.emit('message', {roomId, user, message})\n        dispatch(resetChatMessage())\n    }\n\n    const classes = useStyles()\n\n    const setupChat = () => {\n        socket.emit('request_game_log', {roomId})\n        socket.on('game_log', ({gameLog}) => {\n            dispatch(updateChatLog(gameLog))\n        })\n    }\n\n    useEffect(setupChat, [socket, dispatch, message, roomId, user])\n\n    return (\n        <div className={classes.root}>\n            <List dense className={classes.messageArea}>\n            {gameLog.map(logItem => {\n                return (\n                    <ListItem key={logItem}>\n                        <ListItemText>\n                            {logItem}\n                        </ListItemText>\n                    </ListItem>\n                )\n            })}\n            </List>\n            <form onSubmit={handleSubmit} className={classes.messageBox}>\n                 <TextField\n                    className={classes.messageBoxText}\n                    placeholder=\"Type something\"\n                    value={message}\n                    onChange={handleTextChange}\n                    variant=\"outlined\"\n                />\n                <Button \n                    variant=\"contained\"\n                    className={classes.messageBoxSend}\n                    color=\"primary\" \n                    endIcon={<SendIcon />}\n                    type=\"submit\"\n                >\n                    send\n                </Button>\n            </form>\n        </div>\n    )    \n}\n\nexport default ChatBox","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst ChessStatusDisplay = ({isChecked, isGameOver, winner, currentPlayer}) => {\n    if (!isChecked && !isGameOver) {\n      return null\n    } else if (isGameOver) {\n      return (\n        <Typography variant=\"h5\">\n          Winner: {winner}\n        </Typography>\n      )\n    } else if (isChecked) {\n      return (\n        <Typography variant=\"h5\">\n          Checked: {currentPlayer} \n        </Typography>\n      )\n    }\n}\n\nexport default ChessStatusDisplay","import Chessboard from 'chessboardjsx'\nimport React, {useContext, useEffect} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {setSelectSquare, resetSelectedSquare} from '../reducers/selectSquareReducer'\nimport {setHighlightSquares, resetHighlightSquares} from '../reducers/highlightSquareReducer'\nimport {updateChessStatus} from '../reducers/chessReducer'\nimport HistoryTable from './HistoryTable'\nimport ChatBox from './ChatBox'\nimport ChessStatusDisplay from './ChessStatusDisplay'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { SocketContext } from '../services/socket'\n\nconst ChessGame = () => {\n    const socket = useContext(SocketContext)\n    const dispatch = useDispatch()\n    const roomId = useSelector(state => state.lobby.joinedRoom)\n    const selectedSquare = useSelector(state => state.selectedSquare)\n    const highlightedSquares = useSelector(state => state.highlightSquares)\n    const user = useSelector(state => state.user)\n    const chessStatus = useSelector(state => state.chess)\n    \n    const useStyles = makeStyles((theme) => ({\n        grid: {\n            width: '540px',\n            textAlign: 'center'\n        },\n        status: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white\n        }\n    }))\n\n    const highlightPotentialMoves = (validMoves) => {\n        const highlightedSquares = [...validMoves].reduce((acc, cur) => {\n        if (cur.flags === 'c') {\n            return {\n            ...acc,\n            ...{\n                [cur.from]: {\n                  backgroundColor: \"#006600\"\n                },\n                [cur.to]: {\n                  backgroundColor: \"#004C99\"\n                }\n            }\n            }\n        } else {\n            return {\n            ...acc,\n            ...{\n                [cur.from]: {\n                  backgroundColor: \"#006600\"\n                },\n                [cur.to]: {\n                  background: \"radial-gradient(circle, #009900 30%, transparent 30%)\",\n                  backgroundRadius: \"30%\"\n                }\n            }\n            }\n        }\n    }, {})\n\n    dispatch(setHighlightSquares(highlightedSquares))\n  }\n\n  const highlightMove = (move) => {\n    const highlightedSquares = {\n      [move.from]: {\n        backgroundColor: \"#006600\"\n      },\n      [move.to]: {\n        backgroundColor: \"#009900\"\n      }\n    }\n    dispatch(setHighlightSquares(highlightedSquares))\n  }\n\n  const onSquareClick = (square) => {\n    if (chessStatus.isGameOver || chessStatus.currentPlayer !== user.userName) {\n      return null\n    }\n\n    if (selectedSquare === null) {\n      const squarePotentialMoves = chessStatus.potentialMoves.filter(move => move.from === square)\n      if (squarePotentialMoves.length > 0) {\n        dispatch(setSelectSquare(square))\n        highlightPotentialMoves(squarePotentialMoves)\n      }\n      return null\n    }\n\n    const validMove = chessStatus.potentialMoves.find(move => move.from === selectedSquare && move.to === square)\n    if (validMove) {\n      highlightMove(validMove)\n      socket.emit('move', {roomId, from: selectedSquare, to: square})\n    } else {\n      dispatch(resetHighlightSquares())\n    }\n    dispatch(resetSelectedSquare())\n  }\n\n  const setupGame = () => {\n    socket.emit('chess_state', {roomId})\n\n    socket.on('chess_state', (chessStatus) => {\n      dispatch(updateChessStatus(chessStatus))\n    })\n  }\n\n  useEffect(setupGame, [socket, dispatch, roomId])\n\n  const classes = useStyles()\n  return (\n      <Grid container justify=\"center\" spacing={4}>\n      <Grid item>\n        <div className={classes.grid}>\n          <ChessStatusDisplay \n            isChecked={chessStatus.isChecked}\n            isGameOver={chessStatus.isGameOver}\n            winner={chessStatus.winner}\n            currentPlayer={chessStatus.currentPlayer}\n            className={classes.status}\n          />\n          <Typography variant=\"h4\" className={classes.status}>\n            Turn: {chessStatus.currentPlayer}\n          </Typography>\n          <Chessboard \n            width={540}\n            position={chessStatus.fen}\n            draggable={false}\n            onSquareClick={onSquareClick}\n            squareStyles={highlightedSquares}/>\n        </div>\n      </Grid>\n        <Grid item xl={6}>\n            <div className={classes.grid}>\n              <HistoryTable history={chessStatus.history}/>\n              <ChatBox/>\n            </div>\n        </Grid>\n      </Grid>\n  )\n}\n\nexport default ChessGame","import React, {useContext, useEffect} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {setNewRoomPlayerSide, setAvailableRooms} from '../reducers/lobbyReducer'\nimport {setRoomJoined} from '../reducers/lobbyReducer'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport List from '@material-ui/core/List'\nimport Grid from '@material-ui/core/Grid'\nimport {Typography} from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { SocketContext } from '../services/socket'\nimport {useHistory} from \"react-router-dom\"\n\nconst Lobby = () => {\n    const socket = useContext(SocketContext)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const rooms = useSelector(state => state.lobby.rooms)\n    const newRoomInfo = useSelector(state => state.lobby.newRoomInfo)\n    const roomJoined = useSelector(state => state.lobby.roomJoined)\n    const user = useSelector(state => state.user)\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n          textAlign: 'center',\n        },\n        grid: {\n            marginTop: theme.spacing(2),\n            minWidth: 540\n        },\n        colorStyle: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white\n        }\n    }))\n\n    const handleJoinGame = roomName => {\n        if (roomJoined === null) {\n            socket.emit('join_room', {roomName, user})\n        }\n    }\n\n    const handleCreateRoom = (event) => {\n        event.preventDefault()\n        if (roomJoined === null) {\n            socket.emit(\"create_room\", {newRoomInfo, user})\n        }\n    }\n\n    const handleSideChange = (event) => {\n        dispatch(setNewRoomPlayerSide(event.target.value))\n    }\n\n    const setupRoom = () => {\n\n        socket.on('connect', () => {\n            socket.emit('available_rooms')\n        })\n\n        socket.on(\"available_rooms\", (rooms) => {\n            dispatch(setAvailableRooms(rooms))\n        })\n\n        socket.on('create_room_accepted', ({newRoomId}) => {\n            dispatch(setRoomJoined(newRoomId))\n        })\n\n        socket.on('join_room_accepted', ({roomName}) => {\n            dispatch(setRoomJoined(roomName))\n        })\n\n        socket.on('play_chess_game', ({roomName}) => {\n            history.push(`/game/${roomName}`)\n        })\n    }\n\n    useEffect(setupRoom, [socket, dispatch, history])\n\n    const classes = useStyles()\n\n    if (user === undefined || user.userName === undefined) {\n        history.push('/')\n    }\n\n    return (\n        <Grid container className={classes.root} justify=\"center\" direction=\"column\" alignItems=\"center\">\n            <Grid item>\n                    <Typography className={classes.colorStyle} variant=\"h4\">\n                    Create Game \n                    </Typography>\n                    <form onSubmit={handleCreateRoom}>\n                        <FormControl className={classes.grid} variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Side</InputLabel>\n                            <Select\n                                native\n                                value={newRoomInfo.side}\n                                onChange={handleSideChange}\n                                label=\"Side\"\n                            >\n                                <option value='white'>White</option>\n                                <option value='black'>Black</option>    \n                            </Select>\n                        <Button \n                            variant=\"contained\"\n                            className={classes.formButton}\n                            color=\"primary\" \n                            endIcon={<AddBoxIcon />}\n                            type=\"submit\"\n                        >\n                            create\n                        </Button>          \n                        </FormControl> \n                    </form>\n            </Grid>\n            <Grid item className={classes.grid}>\n                <div>\n                    <Typography className={classes.colorStyle} variant=\"h4\">\n                        Available Rooms\n                    </Typography>\n\n                    <List>\n                        {rooms.map(room => {\n                            return (\n                                <ListItem key={room.roomName} button onClick={() => handleJoinGame(room.roomName)}>\n                                    <ListItemText primary={room.roomOwner.userName} secondary={room.roomName}/>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Lobby","import React from 'react'\nimport { Typography} from '@material-ui/core'\nimport {Link} from \"react-router-dom\"\nimport {makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport Button from '@material-ui/core/Button'\nimport {customAlphabet} from 'nanoid'\nimport {setUser} from '../reducers/userReducer'\nimport {useDispatch} from 'react-redux'\n\nconst HomePage = () => {\n    const dispatch = useDispatch()\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            textAlign: 'center',\n            height: '100vh'\n        },\n        link: {\n            margin: theme.spacing(0, 2),\n            color: theme.palette.background.paper,\n            textDecoration: 'none',\n            ':hover': {\n                color: '#00F'\n            }\n        },\n        name: {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white,\n            borderRadius: '30px'\n        }\n      }))\n\n    const handleGuessButton = () => {\n        const nanoid = customAlphabet('1234567890', 8)\n        const userName = `Guess-${nanoid()}`\n        console.log(userName)\n        const user = {\n            userName: userName\n        }\n        dispatch(setUser(user))\n    }\n\n    const classes = useStyles()\n    \n    return (\n\n        <Grid container className={classes.root} justify=\"center\" direction=\"column\" alignItems=\"center\" spacing={8}>\n            <Grid item className={classes.name}>\n                <Typography variant=\"h1\"> Online Chess JS </Typography>\n            </Grid>\n            <Grid item>\n                <Link className={classes.link} to=\"/lobby\" >\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleGuessButton}\n                        endIcon={<AddBoxIcon />}\n                    >\n                        Play as Guest\n                    </Button>\n                </Link>\n                <Link className={classes.link} to=\"/signin\">\n                    <Button \n                        variant=\"contained\"\n                        color=\"secondary\" \n                        endIcon={<AddBoxIcon />}\n                    >\n                        Sign in\n                    </Button>\n                </Link>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default HomePage","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nexport const signUp = async credentials => {\n    return await axios.post(baseUrl, credentials)\n}\n\nexport const signIn = async credentials => {\n    return await axios.get(baseUrl, {params: {credentials}})\n}","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport {Link} from 'react-router-dom'\nimport {useFormik} from \"formik\"\nimport {signIn} from '../services/sign'\nimport {useHistory} from \"react-router-dom\"\nimport {useDispatch} from 'react-redux'\nimport {setUser} from '../reducers/userReducer'\n\nconst SigninForm = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        avatar: {\n          margin: theme.spacing(1),\n          backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(1),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n        },\n        error: {\n            color: 'red'\n        }\n    }))\n\n    const validate = values => {\n        const errors = {};\n        if (!values.userName) {\n            errors.userName = 'Required';\n        }\n        if (!values.password) {\n            errors.password = 'Required';\n        }\n\n        return errors\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            userName: 'userName',\n            password: ''\n        },\n        validate,\n        onSubmit: async (values, actions) => {\n            try {\n                const response = await signIn(values)\n                console.log(response)\n                const user = {\n                    userName: response.data.userName\n                }\n                dispatch(setUser(user))\n                history.push('/lobby')\n            } catch (error) {\n                actions.setFieldError('general', error.response.data.message)\n            } finally {\n                actions.setSubmitting(false)\n            }\n        }\n    })\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n            </Typography>\n            <Typography className={classes.error} component=\"h1\" variant=\"h5\">\n                {formik.errors.general}\n            </Typography>\n            <form className={classes.form} onSubmit={formik.handleSubmit}>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"userName\"\n                label=\"userName\"\n                name=\"userName\"\n                autoComplete=\"userName\"\n                autoFocus\n                value={formik.userName}\n                onChange={formik.handleChange}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={formik.username}\n                onChange={formik.handleChange}\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n                Sign In\n            </Button>\n            <Grid container>\n                <Grid item>\n                <Link to=\"/signup\">\n                    {\"Don't have an account? Sign Up\"}\n                </Link>\n                </Grid>\n            </Grid>\n            </form>\n        </div>\n        </Container>\n    )\n}\n\nexport default SigninForm","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport {Link} from 'react-router-dom'\nimport {useFormik} from 'formik'\nimport {signUp} from '../services/sign'\nimport {useHistory} from \"react-router-dom\"\nimport {useDispatch} from 'react-redux'\nimport {setUser} from '../reducers/userReducer'\n\nconst SignupForm = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const validate = values => {\n        const errors = {};\n        if (!values.userName) {\n            errors.userName = 'Required';\n        }\n        if (!values.password) {\n            errors.password = 'Required';\n        }\n\n        return errors\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            userName: 'userName',\n            password: ''\n        },\n        validate,\n        onSubmit: async (values, actions) => {\n            try {\n                const response = await signUp(values)\n                const newUser = {\n                    userName: response.data.userName\n                }\n                dispatch(setUser(newUser))\n                history.push('/lobby')\n            } catch (error) {\n                actions.setFieldError('general', error.response.data.message)\n            } finally {\n                actions.setSubmitting(false)\n            }\n        }\n    })\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        error: {\n            color: 'red'\n        }\n    }))\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Typography className={classes.error} component=\"h1\" variant=\"h5\">\n          {formik.errors.general}\n        </Typography>\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"userName\"\n                label=\"userName\"\n                name=\"userName\"\n                value={formik.userName}\n                onChange={formik.handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={formik.password}\n                onChange={formik.handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default SignupForm\n","\nimport React, {useContext, useEffect} from 'react'\nimport NavBar from './components/NavBar'\nimport ChessGame from './components/ChessGame'\nimport Lobby from './components/Lobby'\nimport HomePage from './components/HomePage'\nimport SigninForm from './components/SigninForm'\nimport SignupForm from './components/SignupForm'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport { SocketContext } from './services/socket'\n\nconst App = () => {\n  const socket = useContext(SocketContext)\n  const setupSocket = () => {\n    return () => {\n      socket.disconnect()\n    }\n  }\n  useEffect(setupSocket, [socket])\n  \n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/game\">\n          <NavBar/>\n          <ChessGame/>\n        </Route>\n        <Route path=\"/lobby\">\n          <NavBar/>\n          <Lobby/>\n        </Route>\n        <Route path=\"/signin\">\n          <SigninForm/>\n        </Route>\n        <Route path='/signup'>\n          <SignupForm/>\n        </Route>\n        <Route path=\"/\">\n          <HomePage/>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport selectSquareReducer from './reducers/selectSquareReducer'\nimport highlightSquareReducer from './reducers/highlightSquareReducer'\nimport chessReducer from './reducers/chessReducer'\nimport chatReducer from './reducers/chatReducer'\nimport lobbyReducer from './reducers/lobbyReducer'\nimport userReducer from './reducers/userReducer'\nimport {createStore, combineReducers} from 'redux'\nimport {Provider} from 'react-redux'\nimport {SocketContext, socket} from './services/socket'\nimport App from './App'\n\nconst combinedReducer = combineReducers({\n  selectedSquare: selectSquareReducer,\n  highlightSquares: highlightSquareReducer,\n  chess: chessReducer,\n  chat: chatReducer,\n  lobby: lobbyReducer,\n  user: userReducer\n})\n\nconst store = createStore(combinedReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <SocketContext.Provider value={socket}>\n      <App />\n    </SocketContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}